generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMINISTRATOR
  REGISTRATION_ASSISTANT
}

enum Status {
  ACTIVE
  INACTIVE
}

model User {
  id                       Int             @id @default(autoincrement())
  name                     String
  email                    String          @unique
  password                 String
  role                     Role
  createdAt                DateTime        @default(now()) @map("created_at")
  updatedAt                DateTime        @updatedAt @map("updated_at")
  merchants                Merchant[]      @relation("RegisteredByUser")
  updatedMerchants         Merchant[]      @relation("UpdatedByUser")
  registeredEstablishments Establishment[] @relation("RegisteredByUser")
  updatedEstablishments    Establishment[] @relation("UpdatedByUser")

  @@map("user")
}

model Merchant {
  id               Int             @id @default(autoincrement())
  name             String
  municipality     String
  phone            String?
  email            String?
  status           Status
  registeredBy     User            @relation("RegisteredByUser", fields: [registeredById], references: [id])
  registeredById   Int             @map("registered_by_id")
  registrationDate DateTime        @default(now()) @map("registration_date")
  updatedBy        User            @relation("UpdatedByUser", fields: [updatedById], references: [id])
  updatedById      Int             @map("updated_by_id")
  updatedAt        DateTime        @default(now()) @updatedAt @map("updated_at")
  createdAt        DateTime        @default(now()) @map("created_at")
  establishments   Establishment[]

  @@map("merchant")
}

model Establishment {
  id               Int      @id @default(autoincrement())
  name             String
  revenue          Decimal  @db.Decimal(12, 2)
  employeeCount    Int      @map("employee_count")
  owner            Merchant @relation(fields: [ownerId], references: [id])
  ownerId          Int      @map("owner_id")
  registeredBy     User     @relation("RegisteredByUser", fields: [registeredById], references: [id])
  registeredById   Int      @map("registered_by_id")
  registrationDate DateTime @default(now()) @map("registration_date")
  updatedBy        User     @relation("UpdatedByUser", fields: [updatedById], references: [id])
  updatedById      Int      @map("updated_by_id")
  updatedAt        DateTime @updatedAt @map("updated_at")
  createdAt        DateTime @default(now()) @map("created_at")

  @@map("establishment")
}
